<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>kalinka</artifactId>
	<groupId>com.github.dcsolutions</groupId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>${project.artifactId}</name>
	<description>Kafka-connectivity for MQTT-devices in both directions</description>
	<url>https://github.com/dcsolutions/kalinka</url>

	<organization>
		<name>dcsolutions</name>
		<url>https://github.com/dcsolutions</url>
	</organization>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Michael Sorg</name>
			<email>michas@jarmoni.org</email>
			<organization>dcsolustions</organization>
			<organizationUrl>https://github.com/dcsolutions</organizationUrl>
		</developer>
		<developer>
			<name>Klaus Uhl</name>
			<email>ridethesnake7@yahoo.de</email>
			<organization>dcsolustions</organization>
			<organizationUrl>https://github.com/dcsolutions</organizationUrl>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:https://github.com/dcsolutions/kalinka.git</connection>
		<developerConnection>scm:git:git@github.com:dcsolutions/kalinka.git</developerConnection>
		<url>https://github.com/dcsolutions</url>
	</scm>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.resources.sourceEncoding>UTF-8</project.resources.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		
		<docker.registry.prefix>${project.organization.name}</docker.registry.prefix>

		<activemq.version>5.14.3</activemq.version>
		<kafka.version>0.10.1.0</kafka.version>
		<spring.jms.version>4.3.6.RELEASE</spring.jms.version>
		<zkclient.version>0.10</zkclient.version>
		<guava.version>21.0</guava.version>
		<spring.kafka.version>1.1.2.RELEASE</spring.kafka.version>
		<slf4j.version>1.7.22</slf4j.version>
		<logback.version>1.1.9</logback.version>
		<paho.version>1.1.0</paho.version>
		<junit.version>4.12</junit.version>
		<hamcrest.version>1.3</hamcrest.version>
		<theore.spring.mockito.version>1.3.0</theore.spring.mockito.version>
		<!-- We cannot use most recent curator-version because zookeeper-version conflicts with zkclient -->
		<apache.curator.version>2.11.1</apache.curator.version>
		<maven.shade.plugin.version>3.0.0</maven.shade.plugin.version>
		<nexus.staging.plugin.version>1.6.8</nexus.staging.plugin.version>
		<maven.javadoc.plugin.version>2.10.4</maven.javadoc.plugin.version>
		<maven.source.plugin.version>3.0.1</maven.source.plugin.version>
		<maven.gpg.plugin.version>1.6</maven.gpg.plugin.version>
		<versions.maven.plugin.version>2.3</versions.maven.plugin.version>
		<build.helper.maven.plugin.version>3.0.0</build.helper.maven.plugin.version>
	</properties>

	<profiles>
		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<!-- See: http://central.sonatype.org/pages/apache-maven.html#distribution-management-and-authentication -->
					<!-- See: http://blog.sonatype.com/2010/01/how-to-generate-pgp-signatures-with-maven/ -->
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>${nexus.staging.plugin.version}</version>
						<extensions>true</extensions>
						<configuration>
							<serverId>ossrh</serverId>
							<nexusUrl>https://oss.sonatype.org/</nexusUrl>
							<autoReleaseAfterClose>true</autoReleaseAfterClose>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>${maven.source.plugin.version}</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${maven.javadoc.plugin.version}</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>${maven.gpg.plugin.version}</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>prepareRelease</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>${build.helper.maven.plugin.version}</version>
						<inherited>false</inherited>
						<executions>
							<execution>
								<id>parse-version</id>
								<phase>validate</phase>
								<goals>
									<goal>parse-version</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>versions-maven-plugin</artifactId>
						<version>${versions.maven.plugin.version}</version>
						<inherited>false</inherited>
						<executions>
							<execution>
								<id>set-version</id>
								<phase>validate</phase>
								<goals>
									<goal>set</goal>
								</goals>
								<configuration>
									<newVersion>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}</newVersion>
								</configuration>
							</execution>
							<execution>
								<id>upgrade-pom</id>
								<phase>validate</phase>
								<goals>
									<goal>commit</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<modules>
		<module>kalinka-pub</module>
		<module>kalinka-sub</module>
		<module>kalinka-activemq-plugin</module>
		<module>kalinka-util</module>
		<module>kalinka-it</module>
		<module>kalinka-pub-plugin</module>
		<module>kalinka-service-example-parent</module>
		<module>kalinka-pub-plugin-example</module>
	</modules>
</project>
