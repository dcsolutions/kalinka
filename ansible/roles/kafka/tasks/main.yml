---
- name: create volume-dirs
  file:
    path: "/volumes/kafka/{{item}}"
    state: directory
  with_items:
  - logs
  - config
  - bin

- name: delete content of logs-dir
  shell: rm -rf /volumes/kafka/logs/*
  when: kafka_reset or reset_all

- name: copy conf to host
  template:
    src: "{{item}}.j2"
    dest: "/volumes/kafka/config/{{item}}"
  with_items:
  - server.properties
  - log4j.properties

- name: copy bin to host
  template:
    src: "{{item}}.j2"
    dest: "/volumes/kafka/bin/{{item}}"
    mode: 755
  with_items:
  - start-kafka.sh
  - create-topics.sh

- name: start container
  docker_container:
    name: kafka
    image: "wurstmeister/kafka:{{kafka_version}}" 
    docker_host: "{{docker_host}}"
    network_mode: host
    state: "{{kafka_state}}"
    recreate: "{{kafka_reset or reset_all}}"
    restart: "{{kafka_restart}}"
    restart_policy: unless-stopped
    volumes:
    - /volumes/kafka/logs:/opt/kafka-logs
    - "/volumes/kafka/config/log4j.properties:/opt/{{kafka_dir_name}}/config/log4j.properties"
    - "/volumes/kafka/config/server.properties:/opt/{{kafka_dir_name}}/config/server.properties"
    - /volumes/kafka/bin/start-kafka.sh:/usr/bin/start-kafka.sh
    env:
      EXTRA_ARGS: "-Dcom.sun.management.jmxremote.port={{kafka_jmx_port}}"

